<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:websocket="http://www.springframework.org/schema/websocket"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd">
     <!-- <mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。它提供了数据绑定支持，读取json的支持 -->
    <mvc:annotation-driven>
  <mvc:message-converters register-defaults="true">
    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
      <constructor-arg value="UTF-8" />
    </bean>
  </mvc:message-converters>
</mvc:annotation-driven>
     
    
     <!-- 设置自动注入bean的扫描范围，use-default-filters默认为true，会扫描所有的java类进行注入 ，-->    
     <!-- Use-dafault-filters=”false”的情况下：<context:exclude-filter>指定的不扫描，<context:include-filter>指定的扫描 -->
     <!-- springmvc和application文件都需要配置，但mvc文件只扫描controller类，application扫描不是controller类 -->    
     <context:component-scan base-package="springmvc.controller" use-default-filters="false">
         <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
     </context:component-scan>
     
   <bean id="ItemController1" name="/items.action" class="springmvc.controller.ItemController"/>
     <bean id="ItemController2" class="springmvc.controller.ItemController2"/>
   
      
     <!-- 多个处理器映射器可以共存，控制器会根据URL判断哪个映射器可以映射改URL -->
     <!--配置处理器映射器BeanNameUrlHandlerMapping,该类型的映射器可以根据bean的name来映射URL地址-->
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />

    <!--  配置处理器映射SimpleUrlHandlerMapping，改映射可以根据Handle的beanid去映射URL-->
      <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    	<property name="mappings">
    	<props>
    	<!-- key属性表明对应的URL -->
    		 <prop key="/items1.action">ItemController1</prop>
    		<prop key="/items2.action">ItemController1</prop>
    		<prop key="/items3.action">ItemController2</prop>
    	</props>
    	</property>
    </bean> 
     <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
	
	<!--  配置另外一种处理器适配器,改处理器适配器可以处理实现了HttpRequestHandler接口的java类-->
	 <bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"/> 
  
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/item/" />
      <property name="suffix" value=".jsp" />
   </bean>
</beans>